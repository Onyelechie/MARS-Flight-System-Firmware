[1/12] Performing build step for 'bootloader'
[1/1] cd /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/bootloader/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/system/sys_controller.cpp.obj
../components/system/sys_controller.cpp: In member function 'void CONTROLLER_TASKS::_PREP_()':
../components/system/sys_controller.cpp:106:10: warning: unused variable 'lat' [-Wunused-variable]
  106 |     auto lat = sharedMemory.getLastDouble("TLat");
      |          ^~~
[3/10] Building CXX object esp-idf/system/CMakeFiles/__idf_system.dir/sys_controller.cpp.obj
../components/system/sys_controller.cpp: In member function 'void CONTROLLER_TASKS::_PREP_()':
../components/system/sys_controller.cpp:106:10: warning: unused variable 'lat' [-Wunused-variable]
  106 |     auto lat = sharedMemory.getLastDouble("TLat");
      |          ^~~
[4/10] Linking C static library esp-idf/system/libsystem.a
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable base-firmware.elf
[8/10] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/base-firmware.bin
[9/10] cd /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/partition_table/partition-table.bin /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/base-firmware.bin
base-firmware.bin binary size 0x125ca0 bytes. Smallest app partition is 0x177000 bytes. 0x51360 bytes (22%) free.
[9/10] cd /Users/nyameaama/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.17.3/bin/cmake -D IDF_PATH=/Users/nyameaama/esp/esp-idf -D "SERIAL_TOOL=/Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/Users/nyameaama/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/nyameaama/Documents/MARS-Firmware/base-firmware/build -P /Users/nyameaama/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.usbserial-027D71AF -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 base-firmware.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/cu.usbserial-027D71AF
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:62:60:76:2c:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00135fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16668...
Writing at 0x00001000... (50 %)
Writing at 0x0000769b... (100 %)
Wrote 26640 bytes (16668 compressed) at 0x00001000 in 0.8 seconds (effective 282.9 kbit/s)...
Hash of data verified.
Compressed 1203360 bytes to 679318...
Writing at 0x00010000... (2 %)
Writing at 0x0001b7d5... (4 %)
Writing at 0x0002bc6d... (7 %)
Writing at 0x00036df9... (9 %)
Writing at 0x00040421... (11 %)
Writing at 0x000459d1... (14 %)
Writing at 0x0004f427... (16 %)
Writing at 0x0006183e... (19 %)
Writing at 0x00066d59... (21 %)
Writing at 0x0006d6db... (23 %)
Writing at 0x00073232... (26 %)
Writing at 0x00078efe... (28 %)
Writing at 0x0007ec53... (30 %)
Writing at 0x000841fd... (33 %)
Writing at 0x0008950f... (35 %)
Writing at 0x0008e9f2... (38 %)
Writing at 0x00093d1e... (40 %)
Writing at 0x00099364... (42 %)
Writing at 0x0009ec0e... (45 %)
Writing at 0x000a4a4c... (47 %)
Writing at 0x000aa24d... (50 %)
Writing at 0x000af765... (52 %)
Writing at 0x000b4ee9... (54 %)
Writing at 0x000ba8fd... (57 %)
Writing at 0x000c0004... (59 %)
Writing at 0x000c5949... (61 %)
Writing at 0x000cbccd... (64 %)
Writing at 0x000d1849... (66 %)
Writing at 0x000d85c0... (69 %)
Writing at 0x000e1467... (71 %)
Writing at 0x000e8c5d... (73 %)
Writing at 0x000f1312... (76 %)
Writing at 0x000f6f94... (78 %)
Writing at 0x000fc5a6... (80 %)
Writing at 0x00104825... (83 %)
Writing at 0x0010b7ee... (85 %)
Writing at 0x0011421b... (88 %)
Writing at 0x0011b4bf... (90 %)
Writing at 0x001229b7... (92 %)
Writing at 0x00128333... (95 %)
Writing at 0x0012e019... (97 %)
Writing at 0x00133306... (100 %)
Wrote 1203360 bytes (679318 compressed) at 0x00010000 in 17.0 seconds (effective 566.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 450.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
