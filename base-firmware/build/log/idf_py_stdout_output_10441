[1/12] Performing build step for 'bootloader'
[1/1] cd /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/bootloader/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/10] Building CXX object esp-idf/system/CMakeFiles/__idf_system.dir/sys_controller.cpp.obj
../components/system/sys_controller.cpp: In member function 'void CONTROLLER_TASKS::_PREP_()':
../components/system/sys_controller.cpp:106:10: warning: unused variable 'lat' [-Wunused-variable]
  106 |     auto lat = sharedMemory.getLastDouble("TLat");
      |          ^~~
[3/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/system/sys_controller.cpp.obj
../components/system/sys_controller.cpp: In member function 'void CONTROLLER_TASKS::_PREP_()':
../components/system/sys_controller.cpp:106:10: warning: unused variable 'lat' [-Wunused-variable]
  106 |     auto lat = sharedMemory.getLastDouble("TLat");
      |          ^~~
[4/10] Linking C static library esp-idf/system/libsystem.a
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable base-firmware.elf
[8/10] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/base-firmware.bin
[9/10] cd /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/partition_table/partition-table.bin /Users/nyameaama/Documents/MARS-Firmware/base-firmware/build/base-firmware.bin
base-firmware.bin binary size 0x125cd0 bytes. Smallest app partition is 0x177000 bytes. 0x51330 bytes (22%) free.
[9/10] cd /Users/nyameaama/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.17.3/bin/cmake -D IDF_PATH=/Users/nyameaama/esp/esp-idf -D "SERIAL_TOOL=/Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/Users/nyameaama/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/nyameaama/Documents/MARS-Firmware/base-firmware/build -P /Users/nyameaama/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.usbserial-027D71AF -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 base-firmware.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/cu.usbserial-027D71AF
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:62:60:76:2c:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00135fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16668...
Writing at 0x00001000... (50 %)
Writing at 0x0000769b... (100 %)
Wrote 26640 bytes (16668 compressed) at 0x00001000 in 0.7 seconds (effective 285.1 kbit/s)...
Hash of data verified.
Compressed 1203408 bytes to 679435...
Writing at 0x00010000... (2 %)
Writing at 0x0001b7c8... (4 %)
Writing at 0x0002bc5c... (7 %)
Writing at 0x00036dc0... (9 %)
Writing at 0x00040415... (11 %)
Writing at 0x00045988... (14 %)
Writing at 0x0004f3d5... (16 %)
Writing at 0x00061806... (19 %)
Writing at 0x00066cf7... (21 %)
Writing at 0x0006d63e... (23 %)
Writing at 0x000731cb... (26 %)
Writing at 0x00078e71... (28 %)
Writing at 0x0007ebee... (30 %)
Writing at 0x0008419a... (33 %)
Writing at 0x00089495... (35 %)
Writing at 0x0008e97f... (38 %)
Writing at 0x00093cb5... (40 %)
Writing at 0x000992ef... (42 %)
Writing at 0x0009eb80... (45 %)
Writing at 0x000a49b0... (47 %)
Writing at 0x000aa1b1... (50 %)
Writing at 0x000af6eb... (52 %)
Writing at 0x000b4e55... (54 %)
Writing at 0x000ba85b... (57 %)
Writing at 0x000bff80... (59 %)
Writing at 0x000c58ec... (61 %)
Writing at 0x000cbbcc... (64 %)
Writing at 0x000d17d8... (66 %)
Writing at 0x000d8536... (69 %)
Writing at 0x000e13ad... (71 %)
Writing at 0x000e8bfd... (73 %)
Writing at 0x000f126c... (76 %)
Writing at 0x000f6efa... (78 %)
Writing at 0x000fc509... (80 %)
Writing at 0x00104503... (83 %)
Writing at 0x0010b781... (85 %)
Writing at 0x0011406e... (88 %)
Writing at 0x0011b454... (90 %)
Writing at 0x001228f4... (92 %)
Writing at 0x001282ab... (95 %)
Writing at 0x0012dfb2... (97 %)
Writing at 0x00133285... (100 %)
Wrote 1203408 bytes (679435 compressed) at 0x00010000 in 17.0 seconds (effective 567.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 442.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
