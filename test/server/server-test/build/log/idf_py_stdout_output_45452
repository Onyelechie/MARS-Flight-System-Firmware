[1/13] Performing build step for 'bootloader'
[1/1] cd /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/bootloader/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/server-test.cpp.obj
[3/11] Building CXX object esp-idf/components/CMakeFiles/__idf_components.dir/_broadcast.cpp.obj
[4/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/_broadcast.cpp.obj
[5/11] Linking C static library esp-idf/components/libcomponents.a
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable server-test.elf
[9/11] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/server-test.bin
[10/11] cd /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/partition_table/partition-table.bin /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/server-test.bin
server-test.bin binary size 0xc1de0 bytes. Smallest app partition is 0x100000 bytes. 0x3e220 bytes (24%) free.
[10/11] cd /Users/nyameaama/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.17.3/bin/cmake -D IDF_PATH=/Users/nyameaama/esp/esp-idf -D "SERIAL_TOOL=/Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/Users/nyameaama/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build -P /Users/nyameaama/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 server-test.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/cu.usbserial-0001
Connecting.......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a0:b7:65:4b:b2:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d1fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16666...
Writing at 0x00001000... (50 %)
Writing at 0x0000769f... (100 %)
Wrote 26640 bytes (16666 compressed) at 0x00001000 in 0.9 seconds (effective 236.7 kbit/s)...
Hash of data verified.
Compressed 794080 bytes to 511628...
Writing at 0x00010000... (3 %)
Writing at 0x0001bc0e... (6 %)
Writing at 0x00025b25... (9 %)
Writing at 0x0002b001... (12 %)
Writing at 0x000346c2... (15 %)
Writing at 0x0003a8f7... (18 %)
Writing at 0x00040274... (21 %)
Writing at 0x00045ae6... (25 %)
Writing at 0x0004b402... (28 %)
Writing at 0x00050f6d... (31 %)
Writing at 0x00056cd6... (34 %)
Writing at 0x0005c313... (37 %)
Writing at 0x00061661... (40 %)
Writing at 0x00066b2e... (43 %)
Writing at 0x0006bda7... (46 %)
Writing at 0x00071438... (50 %)
Writing at 0x00076b68... (53 %)
Writing at 0x0007c8b9... (56 %)
Writing at 0x00082153... (59 %)
Writing at 0x000875d8... (62 %)
Writing at 0x0008cda4... (65 %)
Writing at 0x00092816... (68 %)
Writing at 0x00097e8e... (71 %)
Writing at 0x0009d7f5... (75 %)
Writing at 0x000a3919... (78 %)
Writing at 0x000a9744... (81 %)
Writing at 0x000aef70... (84 %)
Writing at 0x000b4744... (87 %)
Writing at 0x000bdc77... (90 %)
Writing at 0x000c589a... (93 %)
Writing at 0x000cb3d8... (96 %)
Writing at 0x000d0717... (100 %)
Wrote 794080 bytes (511628 compressed) at 0x00010000 in 12.2 seconds (effective 520.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 238.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
