[1/13] Performing build step for 'bootloader'
[1/1] cd /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/bootloader/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/HALX/ssd1306.cpp.obj
../components/HALX/ssd1306.cpp: In function 'void displayBOOT()':
../components/HALX/ssd1306.cpp:45:18: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   45 |     SSD1306_Puts("HIVE 2", &Font_16x26, SSD1306_COLOR_WHITE);
      |                  ^~~~~~~~
[3/11] Building CXX object esp-idf/HALX/CMakeFiles/__idf_HALX.dir/ssd1306.cpp.obj
../components/HALX/ssd1306.cpp: In function 'void displayBOOT()':
../components/HALX/ssd1306.cpp:45:18: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   45 |     SSD1306_Puts("HIVE 2", &Font_16x26, SSD1306_COLOR_WHITE);
      |                  ^~~~~~~~
[4/11] Linking C static library esp-idf/HALX/libHALX.a
[5/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/server-test.cpp.obj
../main/server-test.cpp: In function 'void app_main()':
../main/server-test.cpp:37:18: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   37 |     char *strp = "STANDBY";
      |                  ^~~~~~~~~
../main/server-test.cpp:38:19: warning: ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]
   38 |     char *strp2 = "CLIENT CONNECTED";
      |                   ^~~~~~~~~~~~~~~~~~
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable server-test.elf
[9/11] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/server-test.bin
[10/11] cd /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/esp-idf/esptool_py && /Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python /Users/nyameaama/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/partition_table/partition-table.bin /Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build/server-test.bin
server-test.bin binary size 0x11a560 bytes. Smallest app partition is 0x177000 bytes. 0x5caa0 bytes (25%) free.
[10/11] cd /Users/nyameaama/esp/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.17.3/bin/cmake -D IDF_PATH=/Users/nyameaama/esp/esp-idf -D "SERIAL_TOOL=/Users/nyameaama/.espressif/python_env/idf5.1_py3.11_env/bin/python;;/Users/nyameaama/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/nyameaama/Documents/MARS-Firmware/test/server/server-test/build -P /Users/nyameaama/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/cu.usbserial-027D71AF -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 server-test.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/cu.usbserial-027D71AF
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: ec:62:60:76:2c:8c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0012afff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16668...
Writing at 0x00001000... (50 %)
Writing at 0x0000769b... (100 %)
Wrote 26640 bytes (16668 compressed) at 0x00001000 in 0.8 seconds (effective 261.9 kbit/s)...
Hash of data verified.
Compressed 1156448 bytes to 659649...
Writing at 0x00010000... (2 %)
Writing at 0x0001c406... (4 %)
Writing at 0x0002a58c... (7 %)
Writing at 0x0003547e... (9 %)
Writing at 0x0003d59f... (12 %)
Writing at 0x00042e38... (14 %)
Writing at 0x0004ff00... (17 %)
Writing at 0x0005f035... (19 %)
Writing at 0x000647e8... (21 %)
Writing at 0x0006a8fe... (24 %)
Writing at 0x0007039c... (26 %)
Writing at 0x00076150... (29 %)
Writing at 0x0007bde9... (31 %)
Writing at 0x0008116d... (34 %)
Writing at 0x0008650f... (36 %)
Writing at 0x0008ba24... (39 %)
Writing at 0x00090cd9... (41 %)
Writing at 0x000963ad... (43 %)
Writing at 0x0009bc1c... (46 %)
Writing at 0x000a1cde... (48 %)
Writing at 0x000a7293... (51 %)
Writing at 0x000ac84e... (53 %)
Writing at 0x000b2089... (56 %)
Writing at 0x000b7993... (58 %)
Writing at 0x000bcf81... (60 %)
Writing at 0x000c2b1e... (63 %)
Writing at 0x000c8d2e... (65 %)
Writing at 0x000ce8da... (68 %)
Writing at 0x000d5aae... (70 %)
Writing at 0x000de810... (73 %)
Writing at 0x000e5f70... (75 %)
Writing at 0x000ee5ca... (78 %)
Writing at 0x000f3de5... (80 %)
Writing at 0x000f9f71... (82 %)
Writing at 0x00102284... (85 %)
Writing at 0x00109730... (87 %)
Writing at 0x001114ea... (90 %)
Writing at 0x0011840a... (92 %)
Writing at 0x0011dd8d... (95 %)
Writing at 0x001238f5... (97 %)
Writing at 0x00128bab... (100 %)
Wrote 1156448 bytes (659649 compressed) at 0x00010000 in 16.2 seconds (effective 570.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.1 seconds (effective 426.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
